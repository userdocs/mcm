From 3fe7e2c75df78eef42dcdc352a55757729f451e2 Mon Sep 17 00:00:00 2001
From: Drew DeVault <sir@cmpwn.com>
Date: Mon, 3 Jun 2019 16:39:13 -0400
Subject: [PATCH] Address review feedback (TODO: rebase me)

- Remove syscall.s
- Remove big-endian support
- Add -sp target
- Always use vdso for flush_icache
- Fix __ucontext struct
- Remove NO_LEGACY_INITFINI
---
 arch/riscv64/bits/endian.h     |  4 ----
 arch/riscv64/bits/signal.h     |  1 -
 arch/riscv64/bits/socket.h     | 14 --------------
 arch/riscv64/reloc.h           |  2 --
 arch/riscv64/syscall_arch.h    |  3 ---
 src/internal/riscv64/syscall.s | 15 ---------------
 src/linux/cache.c              |  8 ++------
 8 files changed, 3 insertions(+), 46 deletions(-)
 delete mode 100644 src/internal/riscv64/syscall.s

diff --git a/arch/riscv64/bits/endian.h b/arch/riscv64/bits/endian.h
index 7df0e02a..172c338f 100644
--- a/arch/riscv64/bits/endian.h
+++ b/arch/riscv64/bits/endian.h
@@ -1,5 +1 @@
-#if __RISCVEB__
-#define __BYTE_ORDER __BIG_ENDIAN
-#else
 #define __BYTE_ORDER __LITTLE_ENDIAN
-#endif
diff --git a/arch/riscv64/bits/signal.h b/arch/riscv64/bits/signal.h
index 8b992cc8..4c94a8f0 100644
--- a/arch/riscv64/bits/signal.h
+++ b/arch/riscv64/bits/signal.h
@@ -60,7 +60,6 @@ typedef struct __ucontext
 	struct __ucontext *uc_link;
 	stack_t uc_stack;
 	sigset_t uc_sigmask;
-	char __unused[1024 / 8 - sizeof(sigset_t)];
 	mcontext_t uc_mcontext;
 } ucontext_t;
 
diff --git a/arch/riscv64/bits/socket.h b/arch/riscv64/bits/socket.h
index c11677e9..aae537d3 100644
--- a/arch/riscv64/bits/socket.h
+++ b/arch/riscv64/bits/socket.h
@@ -4,30 +4,16 @@ struct msghdr {
 	void *msg_name;
 	socklen_t msg_namelen;
 	struct iovec *msg_iov;
-#if __BYTE_ORDER == __BIG_ENDIAN
-	int __pad1, msg_iovlen;
-#else
 	int msg_iovlen, __pad1;
-#endif
 	void *msg_control;
-#if __BYTE_ORDER == __BIG_ENDIAN
-	int __pad2;
-	socklen_t msg_controllen;
-#else
 	socklen_t msg_controllen;
 	int __pad2;
-#endif
 	int msg_flags;
 };
 
 struct cmsghdr {
-#if __BYTE_ORDER == __BIG_ENDIAN
-	int __pad1;
-	socklen_t cmsg_len;
-#else
 	socklen_t cmsg_len;
 	int __pad1;
-#endif
 	int cmsg_level;
 	int cmsg_type;
 };
diff --git a/arch/riscv64/reloc.h b/arch/riscv64/reloc.h
index 8bd90dda..72526bee 100644
--- a/arch/riscv64/reloc.h
+++ b/arch/riscv64/reloc.h
@@ -11,8 +11,6 @@
 
 #define LDSO_ARCH RISCV_LDSO(__riscv_xlen) RISCV_FP_SUFFIX
 
-#define NO_LEGACY_INITFINI
-
 #define TPOFF_K 0
 
 #define REL_SYMBOLIC    R_RISCV_64
diff --git a/arch/riscv64/syscall_arch.h b/arch/riscv64/syscall_arch.h
index a5b0f646..1aaeb631 100644
--- a/arch/riscv64/syscall_arch.h
+++ b/arch/riscv64/syscall_arch.h
@@ -74,6 +74,3 @@ static inline long __syscall6(long n, long a, long b, long c, long d, long e, lo
 /* We don't have a clock_gettime function.
 #define VDSO_CGT_SYM "__vdso_clock_gettime"
 #define VDSO_CGT_VER "LINUX_2.6" */
-
-#define VDSO_FLUSH_ICACHE_SYM "__vdso_flush_icache"
-#define VDSO_FLUSH_ICACHE_VER "LINUX_4.5"
diff --git a/src/internal/riscv64/syscall.s b/src/internal/riscv64/syscall.s
deleted file mode 100644
index 27905f41..00000000
--- a/src/internal/riscv64/syscall.s
+++ /dev/null
@@ -1,15 +0,0 @@
-.global __syscall
-.hidden __syscall
-.type   __syscall,%function
-__syscall:
-        mv t0, a0
-        mv a0, a1
-        mv a1, a2
-        mv a2, a3
-        mv a3, a4
-        mv a4, a5
-        mv a5, a6
-        mv a6, a7
-        mv a7, t0
-        ecall
-        ret
diff --git a/src/linux/cache.c b/src/linux/cache.c
index 0c5af2ec..0eb051c2 100644
--- a/src/linux/cache.c
+++ b/src/linux/cache.c
@@ -20,7 +20,8 @@ weak_alias(__cachectl, cachectl);
 
 #ifdef SYS_riscv_flush_icache
 
-#ifdef VDSO_FLUSH_ICACHE_SYM
+#define VDSO_FLUSH_ICACHE_SYM "__vdso_flush_icache"
+#define VDSO_FLUSH_ICACHE_VER "LINUX_4.5"
 
 static void *volatile vdso_func;
 
@@ -35,11 +36,8 @@ static int flush_icache_init(void *start, void *end, unsigned long int flags)
 
 static void *volatile vdso_func = (void *)flush_icache_init;
 
-#endif
-
 int __riscv_flush_icache(void *start, void *end, unsigned long int flags) 
 {
-#ifdef VDSO_FLUSH_ICACHE_SYM
 	int (*f)(void *, void *, unsigned long int) =
 		(int (*)(void *, void *, unsigned long int))vdso_func;
 	if (f) {
@@ -47,8 +45,6 @@ int __riscv_flush_icache(void *start, void *end, unsigned long int flags)
 		if (!r) return r;
 		if (r != -ENOSYS) return __syscall_ret(r);
 	}
-#endif
-	return syscall(SYS_riscv_flush_icache, start, end, flags);
 }
 weak_alias(__riscv_flush_icache, riscv_flush_icache);
 #endif
